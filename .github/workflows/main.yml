name: Build and Package Binary

on:
  push:
    paths:
      - 'main.py'
      - '.github/workflows/main.yml'

jobs:
  windows-build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pygame-ce

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name lqlute-beta --add-data "data:data" main.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Windows-Qlute
        path: ./dist
  linux-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pygame-ce
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name lqlute-beta --add-data "data:data" main.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Linux-Qlute
        path: ./dist
  Release:
    name: Create Game Release
    runs-on: ubuntu-latest
    needs: [linux-build, windows-build]
    if: ${{ needs.windows-build.result == 'success' && needs.windows-build.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          path: Linux-Qlute.zip
      - uses: actions/download-artifact@v3
        with:
          path: Windows-Qlute.zip
      - name: Get current date for Release
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ steps.date.outputs.date }}
          body: |
            This is automated, Please read the changelog at the main site.
          draft: false
          prerelease: false
      - name: Upload Windows Version
        id: windowsv
        uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Windows-Qlute.zip
          asset_name: Windows-Qlute.zip
          asset_content_type: application/zip
      - name: Upload Linux Version
        id: linuxv 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Linux-Qlute.zip
          asset_name: Linux-Qlute.zip
          asset_content_type: application/zip
